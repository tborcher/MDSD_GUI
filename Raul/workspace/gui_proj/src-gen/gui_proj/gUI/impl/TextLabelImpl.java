/**
 * generated by Xtext 2.15.0
 */
package gui_proj.gUI.impl;

import gui_proj.gUI.GUIElementDescription;
import gui_proj.gUI.GUIPackage;
import gui_proj.gUI.TextLabel;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Text Label</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link gui_proj.gUI.impl.TextLabelImpl#getTextLabelDescription <em>Text Label Description</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TextLabelImpl extends GUIElementImpl implements TextLabel
{
  /**
   * The cached value of the '{@link #getTextLabelDescription() <em>Text Label Description</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTextLabelDescription()
   * @generated
   * @ordered
   */
  protected GUIElementDescription textLabelDescription;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TextLabelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GUIPackage.Literals.TEXT_LABEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GUIElementDescription getTextLabelDescription()
  {
    return textLabelDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTextLabelDescription(GUIElementDescription newTextLabelDescription, NotificationChain msgs)
  {
    GUIElementDescription oldTextLabelDescription = textLabelDescription;
    textLabelDescription = newTextLabelDescription;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GUIPackage.TEXT_LABEL__TEXT_LABEL_DESCRIPTION, oldTextLabelDescription, newTextLabelDescription);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTextLabelDescription(GUIElementDescription newTextLabelDescription)
  {
    if (newTextLabelDescription != textLabelDescription)
    {
      NotificationChain msgs = null;
      if (textLabelDescription != null)
        msgs = ((InternalEObject)textLabelDescription).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GUIPackage.TEXT_LABEL__TEXT_LABEL_DESCRIPTION, null, msgs);
      if (newTextLabelDescription != null)
        msgs = ((InternalEObject)newTextLabelDescription).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GUIPackage.TEXT_LABEL__TEXT_LABEL_DESCRIPTION, null, msgs);
      msgs = basicSetTextLabelDescription(newTextLabelDescription, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GUIPackage.TEXT_LABEL__TEXT_LABEL_DESCRIPTION, newTextLabelDescription, newTextLabelDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GUIPackage.TEXT_LABEL__TEXT_LABEL_DESCRIPTION:
        return basicSetTextLabelDescription(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GUIPackage.TEXT_LABEL__TEXT_LABEL_DESCRIPTION:
        return getTextLabelDescription();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GUIPackage.TEXT_LABEL__TEXT_LABEL_DESCRIPTION:
        setTextLabelDescription((GUIElementDescription)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GUIPackage.TEXT_LABEL__TEXT_LABEL_DESCRIPTION:
        setTextLabelDescription((GUIElementDescription)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GUIPackage.TEXT_LABEL__TEXT_LABEL_DESCRIPTION:
        return textLabelDescription != null;
    }
    return super.eIsSet(featureID);
  }

} //TextLabelImpl
